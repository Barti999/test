import { fetchPoslowie, fetchPosiedzenia, fetchGlosowania, formatNumber } from "./api.js";

document.addEventListener("DOMContentLoaded", async () => {
    const listaPoslow = document.getElementById("poslowie");
    const listaPosiedzen = document.getElementById("posiedzenia");
    const listaGlosowan = document.createElement("ul"); // Lista g≈Çosowa≈Ñ

    const sekcjaPoslowie = document.getElementById("sekcja-poslowie");
    const sekcjaPosiedzenia = document.getElementById("sekcja-posiedzenia");

    const btnPoslowie = document.getElementById("btn-poslowie");
    const btnPosiedzenia = document.getElementById("btn-posiedzenia");

    // Prze≈ÇƒÖczanie zak≈Çadek (pos≈Çowie / posiedzenia)
    btnPoslowie.addEventListener("click", () => {
        sekcjaPoslowie.style.display = "block";
        sekcjaPosiedzenia.style.display = "none";
    });

    btnPosiedzenia.addEventListener("click", () => {
        sekcjaPoslowie.style.display = "none";
        sekcjaPosiedzenia.style.display = "block";
    });

    // Wczytanie listy pos≈Ç√≥w
    async function loadPoslowie() {
        const poslowie = await fetchPoslowie();
        if (!poslowie) {
            listaPoslow.innerHTML = "<p>Nie uda≈Ço siƒô za≈Çadowaƒá listy pos≈Ç√≥w.</p>";
            return;
        }

        listaPoslow.innerHTML = "";
        poslowie.forEach(posel => {
            const li = document.createElement("li");
            li.innerHTML = `<strong>${posel.firstLastName}</strong> (${posel.club || "Brak informacji"})`;
            listaPoslow.appendChild(li);
        });

        console.log("‚úÖ Pos≈Çowie za≈Çadowani!");
    }

    // Wczytanie listy posiedze≈Ñ i dodanie obs≈Çugi klikniƒôcia
    async function loadPosiedzenia() {
        const posiedzenia = await fetchPosiedzenia();
        if (!posiedzenia) {
            listaPosiedzen.innerHTML = "<p>Nie uda≈Ço siƒô za≈Çadowaƒá listy posiedze≈Ñ.</p>";
            return;
        }

        listaPosiedzen.innerHTML = "";
        posiedzenia.forEach(posiedzenie => {
            const li = document.createElement("li");
            li.innerHTML = `
                <strong>${posiedzenie.title}</strong> (Nr: ${posiedzenie.number})
                <ul>
                    ${posiedzenie.dates.map(date => `<li>${date}</li>`).join("")}
                </ul>
            `;

            // Klikniƒôcie w posiedzenie ‚Üí pobranie g≈Çosowa≈Ñ
            li.addEventListener("click", async () => {
                console.log(`üîÑ Pobieranie g≈Çosowa≈Ñ dla posiedzenia nr ${posiedzenie.number}...`);
                const glosowania = await fetchGlosowania(posiedzenie.number);
                listaGlosowan.innerHTML = ""; // Czy≈õcimy starƒÖ listƒô

                if (!glosowania || glosowania.length === 0) {
                    listaGlosowan.innerHTML = "<p>Brak g≈Çosowa≈Ñ dla tego posiedzenia.</p>";
                    return;
                }

                glosowania.forEach(glosowanie => {
                    const glosLi = document.createElement("li");
                    glosLi.innerHTML = `
                        <h4>${glosowanie.title}</h4>
                        <p><strong>Data:</strong> ${glosowanie.date}</p>
                        <p><strong>Opis:</strong> ${glosowanie.description}</p>
                        <p><strong>≈ÅƒÖczna liczba g≈ÇosujƒÖcych:</strong> ${formatNumber(glosowanie.totalVoted)}</p>
                        <ul>
                            ${
                                glosowanie.votingOptions 
                                ? glosowanie.votingOptions.map(option => `
                                    <li>${option.option}: <strong>${formatNumber(option.votes)}</strong> g≈Ços√≥w</li>
                                `).join("")
                                : "<li>Brak danych o wynikach g≈Çosowania</li>"
                            }
                        </ul>
                    `;
                    listaGlosowan.appendChild(glosLi);
                });

                li.appendChild(listaGlosowan);
            });

            listaPosiedzen.appendChild(li);
        });

        console.log("‚úÖ Posiedzenia za≈Çadowane!");
    }

    // Za≈Çaduj dane przy starcie
    loadPoslowie();
    loadPosiedzenia();
});
